[00:06:32] -qtox-git-spam- [qTox] Diadlo opened pull request #3868: feat(toxid): Added correct checksum validation. (master...addToxIdCheck) https://git.io/vXz0z
[01:56:19] *** Quits: DaSpirit (~DaSpirit@ ) (Quit: Leaving)
[03:16:23] *** Quits: athan (~athan@ ) (Remote host closed the connection)
[03:34:14] <oranges> T R U M P T R A I N
[04:12:06] <MiokIry> trump empire lol
[04:50:36] *** Joins: initramfs (~initramfs@ )
[05:12:42] *** Joins: athan (~athan@ )
[05:34:19] *** Quits: initramfs (~initramfs@ ) (Quit: Leaving)
[06:25:22] -qtox-git-spam- [qTox] Diadlo opened pull request #3869: refactor(core): Changed Core interface, added documentation (master...improveCoreStyle) https://git.io/vXz9h
[06:59:45] *** Quits: in1t3r (~LordShiva@ ) (Ping timeout: 260 seconds)
[07:22:01] *** Joins: in1t3r (~LordShiva@ )
[07:49:37] *** Joins: Diadlo_ (5d588822@ )
[07:51:19] <Diadlo_> zetok: Hello
[07:52:01] <Diadlo_> When you test settings resize, do you try to remove more, than 1 tab?
[07:53:07] <zetok> nope
[07:53:09] <zetok> one at a time
[07:54:26] <Diadlo_> Can you try more?)
[07:54:53] <zetok> yeah, later
[07:55:01] <Diadlo_> Ok, thanks
[09:15:12] *** Joins: initramfs (~initramfs@ )
[09:44:12] *** Joins: LittleVulpix (~Miranda@ )
[10:01:20] *** Quits: zero-ghost (~0@ ) (Quit: Leaving.)
[10:01:49] *** Joins: sudden6 (~anonymous@ )
[10:16:22] *** Joins: zero-ghost (~0@ )
[10:27:28] <Diadlo_> sudden6: Hi o/
[10:27:42] <sudden6> Diadlo_: \o
[10:27:51] <Diadlo_> Can you test https://github.com/qTox/qTox/pull/3865?
[10:28:09] <sudden6> yep
[10:28:52] <sudden6> https://github.com/qTox/qTox/pull/3868 does toxcore not expose an interface to valdidate a ToxID?
[10:29:21] <Diadlo_> Not
[10:29:29] <Diadlo_> It doesn't
[10:29:56] <sudden6> It should
[10:30:07] <sudden6> iphy: ↑
[10:31:26] <Diadlo_> Also, I don't want use `Core` inside `ToxId`
[10:32:56] <sudden6> mhm, still toxcore should expose an interface to check IDs for validity
[10:34:05] <sudden6> Diadlo_: what do you think about making some sort of "ToxUtils" Class? essentially wrapping utility stuff like toxencryptsave?
[10:34:35] <sudden6> because this stuff is pretty much independent from the Core operations
[10:35:33] <Diadlo_> I will take a look in the evening. But sounds good to me
[10:36:52] <sudden6> Diadlo_: I can resize settings
[10:37:33] <sudden6> but if I make the window the min width and try to resize the friendslist I get flickering and graphical glitches
[10:38:04] <Diadlo_> Hm.. Ok. Seems, it fix issue only for me
[10:38:05] <Diadlo_> I will avoid to lgtm #3864 until week of merging, because I not sure, that it's safe. Ok?
[10:39:17] <sudden6> Diadlo_: the issue is fixed (I think)
[10:40:40] <sudden6> We need a label declaring which PRs can be merged in the week of testing
[10:41:04] <Diadlo_> zetok said, that he can resize before, without glitches
[10:41:12] <Diadlo_> +1
[10:41:23] <zetok> sudden6: just assign to the milestone
[10:41:46] <sudden6> the glitches happen only when the window is as small as it can get, else it's fine
[10:41:51] <sudden6> zetok: ok
[10:42:04] <sudden6> and hi zetok :)
[10:43:12] <zetok> hello
[10:43:38] <sudden6> so I'll tag everything with 1.7 that won't make it due to week of testing rules
[10:44:02] <zetok> mm
[10:44:37] <zetok> Diadlo_: oh, orca works for you?
[10:44:41] <Diadlo_> Yes
[10:45:03] <zetok> which version?
[10:45:05] <Diadlo_> But it was hard :)
[10:45:13] <zetok> oh
[10:45:17] <zetok> what needs to be done?
[10:46:04] <zetok> is there a wiki page somewhere?
[10:46:44] <Diadlo_> 1) start orca 2) logout & login 3) On KDE I had to check `on` checkbox in accessibility settings
[10:47:15] <Diadlo_> 1 <-> 2
[10:47:21] <Diadlo_> Hm...
[10:47:21] <Diadlo_> Or
[10:47:24] <Diadlo_> 1 2 1 3
[10:47:43] <Diadlo_> I didn't found wiki
[10:48:25] <zetok> https://a.uguu.se/eAymc1DWS5q4.png
[10:48:46] <zetok> ain't got no accessibility settings :|
[10:48:54] <Diadlo_> :|
[10:49:05] <Diadlo_> You use KDE?
[10:49:09] <zetok> nah, i3
[10:49:44] <zetok> I have systemsettings5 only to set gtk themes to something usable
[10:49:51] <Diadlo_> Ok
[10:50:53] <zetok> there must be something that one can set to make that work
[10:51:36] <Diadlo_> I'm not blind and it was hard to setup orca. I can't imagine how it for blind peoples :/
[10:51:48] <zetok> AFAIK there are preconfigured distros
[10:51:58] <zetok> but yeah
[10:52:14] <Diadlo_> AFAIK mate have good accessibility settings
[10:54:32] <sudden6> since #3827 won't make it due to week of testing rules, I'll move it to 1.7
[10:55:21] <zetok> sudden6: err
[10:55:33] <zetok> sudden6: no, it fits in 1.6
[10:55:36] <sudden6> ?
[10:55:59] <sudden6> it has the possibilty to break stuff, do you really want to risk that?
[10:56:09] <zetok> :s
[10:56:15] <Diadlo_> +1 to sudden6
[10:56:16] <zetok> oh well
[10:56:54] <Diadlo_> PR like this is the reason, why we create week of testing :)
[10:56:57] <Diadlo_> IMO
[10:57:02] <sudden6> it's also not even lgtm
[10:57:12] <sudden6> yep
[10:57:15] <zetok> mm, go ahead then
[10:57:41] <zetok> I hoped though to get that fixed for 1.6
[11:06:49] <sudden6> me too
[11:14:26] <Diadlo_> sudden6: >ahm, I don't get why there is the same implementation twice, here and below. <-- One return const and non-const pointer
[11:14:49] <sudden6> yeah, but why do we need both?
[11:15:17] <Diadlo_> Which one you think "right"?
[11:16:06] <sudden6> don't know, the const one?
[11:16:26] <Diadlo_> If you leave const one, you will can't call non-const methods
[11:17:01] <Diadlo_> void Class::method() const { Core::getInstance()->nonconst(); }   <-- error
[11:17:22] <sudden6> mhm, and if I leave the other one?
[11:19:40] <Diadlo_> Then we can't make `method` const
[11:20:27] <Diadlo_> It will not compile error. But in the logic
[11:21:01] <Diadlo_> void Class::A() { Core::getInstance()->constMethod(); }
[11:21:17] <Diadlo_> There is no reason to leave A non-const
[11:22:08] <Diadlo_> \// I'm not sure, that making A const didn't provide compiler error
[11:23:16] <sudden6> ok, strange thing that c++ is
[11:23:46] <Diadlo_> No. It's absolutely right
[11:24:03] <Diadlo_> What you think strange?
[11:24:14] <Diadlo_> I will try to explain
[11:34:59] *** Quits: MiokIry (~Miok@ ) (Ping timeout: 244 seconds)
[11:40:50] <Diadlo_> What you think about adding `src/` to include path?
[11:41:13] <Diadlo_> Now we have `src/` in every local include
[11:41:17] <sudden6> hmm
[11:41:53] <sudden6> would definitely save some typing
[11:42:49] <Diadlo_> + it seems more logical, if path start with package name
[11:43:09] <Diadlo_> `package name` it `core`, `widget`, etc.
[11:43:13] <Diadlo_> *is is
[11:43:17] <Diadlo_> *it is
[11:51:30] <iphy> "let's make a utility class" - "good idea"
[11:51:36] <iphy> All hope is gone
[11:54:42] <Diadlo_> ¯ \ _ (ツ) _ / ¯
[11:58:02] <Diadlo_> What wrong with utility, if its methods independent of toxcore?
[11:58:35] <Diadlo_> Oh.. Seems, I understand
[11:59:33] <Diadlo_> independent of <something> -> static methods. Right?
[11:59:59] <Diadlo_> iphy: ^
[12:03:10] <iphy> It depends
[12:03:35] <iphy> Are you rewriting qTox in C?
[12:03:58] <Diadlo_> Not
[12:04:29] <Diadlo_> Why you think so?
[12:04:39] <iphy> Should invalid tox IDs exist?
[12:05:14] <Diadlo_> No?
[12:05:17] <Diadlo_> Where?
[12:05:30] <iphy> In memory, as ToxId object
[12:05:42] <Diadlo_> No
[12:07:33] <iphy> Do you want to use the "tox ID is valid" function more than once?
[12:08:43] <Diadlo_> Yes
[12:08:47] <iphy> Why?
[12:08:53] <iphy> In what situations?
[12:09:06] <Diadlo_> "Add friend" form
[12:09:09] <Diadlo_> To validate input
[12:10:04] <Diadlo_> But if we suggest, that we will use something like `toxId.isEmpty()`
[12:10:16] <Diadlo_> What you suggest?
[12:10:34] <Diadlo_> Make this method private? Or what?
[12:10:45] <zetok> can creating ToxId fail if input is not a valid Tox ID?
[12:11:42] <Diadlo_> If we will remove validation?
[12:11:55] <zetok> um?
[12:12:21] <Diadlo_> can creating ToxId fail if input is not a valid Tox ID? <- No. Now we block button if toxid invalid
[12:12:43] <zetok> it shouldn't be possible to create a ToxId if input is invalid
[12:13:09] <zetok> and if creation fails, you know that input is not valid
[12:13:29] <zetok> >can creating ToxId fail if input is not a valid Tox ID?
[12:13:36] <zetok> I mean in purely technical way
[12:13:42] <Diadlo_> Yes. See my message above
[12:13:44] <iphy> Oh so invalid tox ID objects do exist after all
[12:13:56] <Diadlo_> No
[12:14:13] *** Quits: athan (~athan@ ) (Ping timeout: 245 seconds)
[12:14:18] <zetok> Diadlo_: so you can't have failed creation of ToxId in C++?
[12:14:37] <Diadlo_> We can create empty ToxId
[12:14:47] <Diadlo_> Which is not real ToxId
[12:15:32] <Diadlo_> But it's not current behaviour
[12:16:47] <Diadlo_> In short. What do you have in mind?
[12:17:13] <iphy> But there is an isempty function? Is its definition "return false;"?
[12:17:37] <iphy> I see
[12:17:47] <zetok> Diadlo_: e.g. https://zetok.github.io/tox/tox/toxencryptsave/struct.PassKey.html#method.new
[12:18:09] <iphy> I suggest making it so that only valid tox ID objects can exist
[12:18:29] <zetok> Diadlo_: creating `PassKey` can either return `PassKey` or an error if e.g. input is invalid
[12:23:31] *** Joins: nouts (~nouts@ )
[12:27:56] <Diadlo_> iphy: By previous validation? Or like zetok suggest it?
[12:29:08] <iphy> What does previous validation mean?
[12:29:49] <Diadlo_> if (!ToxId::isValid(string)) { return; } \n ToxId newId(string);
[12:30:19] <iphy> I see
[12:30:45] <Diadlo_> That's what I mean
[12:31:54] <Diadlo_> Or ToxId newId;    ToxId::tryCreate(newId, error);      if (error == ToxId::INVALUD) return;
[12:32:35] <iphy> If you put that into the one function in the program that can create tox IDs, that's good
[12:32:38] <Diadlo_> s/ToxId::tryCreate(newId, error);/error = ToxId::tryCreate(newId);/
[12:33:34] <Diadlo_> What is `that`?
[12:36:56] *** Quits: nouts (~nouts@ ) (Quit: Leaving)
[12:37:58] <iphy> Diadlo_: basically what zetok suggested, yes
[12:38:44] <Diadlo_> Ok
[12:39:15] *** Joins: gnouts (~nouts@ )
[12:59:23] *** Joins: cenysor (~cenysor@ )
[13:07:14] *** Quits: Diadlo_ (5d588822@ ) (Quit: Page closed)
[13:21:22] *** Quits: sudden6 (~anonymous@ ) (Ping timeout: 265 seconds)
[14:17:34] *** Quits: cenysor (~cenysor@ ) (Remote host closed the connection)
[14:20:53] *** Quits: cisc (~cisc@ ) (Ping timeout: 246 seconds)
[14:21:03] *** Joins: cisc (~cisc@ )
[14:23:59] *** Quits: cisc (~cisc@ ) (Client Quit)
[14:24:18] *** Joins: cisc (~cisc@ )
[14:59:42] *** Joins: CGGB (~CGGB@ )
[15:05:25] *** Joins: MiokIry (~Miok@ )
[15:09:17] *** Quits: MiokIry (~Miok@ ) (Read error: Connection reset by peer)
[15:14:09] *** Joins: sudden6 (~anonymous@ )
[15:16:24] *** Joins: Darky (~Darky@ )
[15:48:19] *** Joins: bennabiy (~bennabiy@ )
[15:53:46] *** Joins: shiva (~LordShiva@ )
[15:54:29] *** Quits: in1t3r (~LordShiva@ ) (Ping timeout: 252 seconds)
[16:01:44] *** Quits: shiva (~LordShiva@ ) (Ping timeout: 256 seconds)
[16:14:36] *** Quits: bennabiy (~bennabiy@ ) (Remote host closed the connection)
[16:27:12] *** Joins: in1t3r (~LordShiva@ )
[16:28:27] *** Quits: in1t3r (~LordShiva@ ) (Remote host closed the connection)
[16:29:19] *** Joins: shiva (~LordShiva@ )
[17:00:06] *** Joins: cenysor (~cenysor@ )
[17:07:46] *** Joins: in1t3r (~LordShiva@ )
[17:08:16] *** Quits: shiva (~LordShiva@ ) (Ping timeout: 240 seconds)
[17:39:45] *** Quits: gnouts (~nouts@ ) (Ping timeout: 244 seconds)
[17:48:16] *** Quits: in1t3r (~LordShiva@ ) (Ping timeout: 256 seconds)
[18:03:24] *** Joins: in1t3r (~LordShiva@ )
[19:13:56] *** Quits: in1t3r (~LordShiva@ ) (Ping timeout: 260 seconds)
[19:36:02] *** Joins: in1t3r (~LordShiva@ )
[21:11:29] *** Joins: athan (~athan@ )
[21:27:38] *** Quits: cenysor (~cenysor@ ) (Remote host closed the connection)
[21:37:29] *** Joins: cenysor (~cenysor@ )
[21:52:33] *** Quits: cenysor (~cenysor@ ) (Remote host closed the connection)
[22:11:47] *** Quits: athan (~athan@ ) (Remote host closed the connection)
[22:14:58] *** Joins: athan (~athan@ )
[22:55:15] *** Joins: jjuran_ (~jjuran@ )
[22:56:39] *** Quits: jjuran (~jjuran@ ) (Ping timeout: 256 seconds)
[22:56:39] *** jjuran_ is now known as jjuran
[23:04:47] *** Quits: athan (~athan@ ) (Remote host closed the connection)
[23:39:42] *** Quits: CGGB (~CGGB@ ) (Quit: CGGB)
